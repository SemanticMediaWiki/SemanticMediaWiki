<?php

namespace SMW\MediaWiki\Specials\Admin;

use SMW\ApplicationFactory;
use SMW\MediaWiki\Renderer\HtmlFormRenderer;
use Onoi\MessageReporter\MessageReporterFactory;
use SMW\SQLStore\Installer;
use SMW\Message;
use SMW\Store;
use Html;
use WebRequest;

/**
 * @license GNU GPL v2+
 * @since   2.5
 *
 * @author mwjames
 */
class TableSchemaUpdaterSection {

	/**
	 * @var Store
	 */
	private $store;

	/**
	 * @var HtmlFormRenderer
	 */
	private $htmlFormRenderer;

	/**
	 * @var OutputFormatter
	 */
	private $outputFormatter;

	/**
	 * @since 2.5
	 *
	 * @param Store $store
	 * @param HtmlFormRenderer $htmlFormRenderer
	 * @param OutputFormatter $outputFormatter
	 */
	public function __construct( Store $store, HtmlFormRenderer $htmlFormRenderer, OutputFormatter $outputFormatter ) {
		$this->store = $store;
		$this->htmlFormRenderer = $htmlFormRenderer;
		$this->outputFormatter = $outputFormatter;
	}

	/**
	 * @since 2.5
	 *
	 * @return string
	 */
	public function getForm() {

		$html = $this->htmlFormRenderer
			->setName( 'buildtables' )
			->setMethod( 'get' )
			->addHiddenField( 'action', 'updatetables' )
			->addHeader( 'h2', Message::get( 'smw_smwadmin_db', Message::TEXT, Message::USER_LANGUAGE ) )
			->addParagraph( Message::get( 'smw_smwadmin_dbdocu', Message::TEXT, Message::USER_LANGUAGE ) )
			->addHiddenField( 'udsure', 'yes' )
			->addSubmitButton( Message::get( 'smw_smwadmin_dbbutton', Message::TEXT, Message::USER_LANGUAGE ) )
			->getForm();

		return $html . Html::element( 'p', array(), '' );
	}

	/**
	 * @since 2.5
	 *
	 * @param WebRequest $webRequest
	 *
	 * @return callable
	 */
	public function doUpdate( WebRequest $webRequest ) {

		$messageReporter = MessageReporterFactory::getInstance()->newObservableMessageReporter();
		$messageReporter->registerReporterCallback( array( $this, 'reportMessage' ) );

		$this->outputFormatter->setPageTitle( Message::get( 'smw_smwadmin_db' ) );
		$this->outputFormatter->addParentLink();

		$this->store->getOptions()->set( Installer::OPT_MESSAGEREPORTER, $messageReporter );

		$this->outputFormatter->addHTML( Html::rawElement( 'p', array(), Message::get( 'smw_smwadmin_permissionswarn', Message::TEXT, Message::USER_LANGUAGE ) ) );

		$this->outputFormatter->addHTML( '<pre>' );

		// Output is generated by the injected 'installer.messagereporter'
		$result = $this->store->setup();

		$this->outputFormatter->addHTML( '</pre>' );

		if ( $result === true && $webRequest->getText( 'udsure' ) == 'yes' ) {
			$this->outputFormatter->addWikiText( '<p><b>' . Message::get( 'smw_smwadmin_setupsuccess', Message::TEXT, Message::USER_LANGUAGE ) . "</b></p>" );
		}
	}

	/**
	 * @since 2.5
	 *
	 * @param string $message
	 */
	public function reportMessage( $message ) {
		$this->outputFormatter->addHTML( $message );
	}

}
