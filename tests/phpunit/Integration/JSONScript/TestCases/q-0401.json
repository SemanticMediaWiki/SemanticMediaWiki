{
	"description": "Test `_SUBP` on a simple 'family' subproperty hierarchy example query (#1003, skip virtuoso)",
	"setup": [
		{
			"namespace": "SMW_NS_PROPERTY",
			"page": "Family (http://www.cs.man.ac.uk/~stevensr/ontology/family.rdf.owl)",
			"contents": "[[Has type::Page]]"
		},
		{
			"namespace": "SMW_NS_PROPERTY",
			"page": "Spouse",
			"contents": "[[Has type::Page]]"
		},
		{
			"namespace": "SMW_NS_PROPERTY",
			"page": "Has wife",
			"contents": "[[Has type::Page]] [[Subproperty of::Spouse]] [[Subproperty of::Family]]"
		},
		{
			"namespace": "SMW_NS_PROPERTY",
			"page": "Has husband",
			"contents": "[[Has type::Page]] [[Subproperty of::Spouse]] [[Subproperty of::Family]]"
		},
		{
			"namespace": "SMW_NS_PROPERTY",
			"page": "Has child",
			"contents": "[[Has type::Page]] [[Subproperty of::Family]]"
		},
		{
			"namespace": "SMW_NS_PROPERTY",
			"page": "Has brother",
			"contents": "[[Has type::Page]]"
		},
		{
			"namespace": "SMW_NS_PROPERTY",
			"page": "Has sister",
			"contents": "[[Has type::Page]]"
		},
		{
			"page": "John Doe",
			"contents": "[[Has wife::Jane Doe]] [[Has child::Jonnie Doe]] [[Has child::Janie Doe]]"
		},
		{
			"page": "Jane Doe",
			"contents": "[[Has husband::John Doe]]"
		},
		{
			"page": "Jonnie Doe",
			"contents": "[[Has sister::Janie Doe]]"
		},
		{
			"page": "Janie Doe",
			"contents": "[[Has brother::Jonnie Doe]]"
		}
	],
	"tests": [
		{
			"type": "query",
			"about": "#0 Spouse to search any value",
			"condition": "[[Spouse::+]]",
			"printouts": [
				"Has wife",
				"Has husband"
			],
			"parameters": {
				"limit": "10"
			},
			"assert-queryresult": {
				"results": [
					"John Doe#0##",
					"Jane Doe#0##"
				],
				"count": "2",
				"datavalues": [
					{
						"property": "Has wife",
						"value": "Jane Doe"
					},
					{
						"property": "Has husband",
						"value": "John Doe"
					}
				]
			}
		},
		{
			"type": "query",
			"about": "#1 Disjunctive query for distinct spouse value",
			"condition": "[[Spouse::John Doe]] OR [[Spouse::Jane Doe]]",
			"printouts": [
				"Has wife",
				"Has husband"
			],
			"parameters": {
				"limit": "10"
			},
			"assert-queryresult": {
				"results": [
					"John Doe#0##",
					"Jane Doe#0##"
				],
				"count": "2",
				"datavalues": [
					{
						"property": "Has wife",
						"value": "Jane Doe"
					},
					{
						"property": "Has husband",
						"value": "John Doe"
					}
				]
			}
		},
		{
			"type": "query",
			"about": "#2 find members of a super property",
			"condition": "[[Subproperty of::Property:Spouse]]",
			"printouts": [],
			"parameters": {
				"limit": 10
			},
			"assert-queryresult": {
				"count": 2,
				"results": [
					"Has wife#102##",
					"Has husband#102##"
				]
			}
		},
		{
			"type": "query",
			"about": "#3 find the super properties (invert)",
			"condition": "[[-Subproperty of::Property:Has wife]]",
			"printouts": [],
			"parameters": {
				"limit": 10
			},
			"assert-queryresult": {
				"count": 2,
				"results": [
					"Spouse#102##",
					"Family#102##"
				]
			}
		}
	],
	"settings": {
		"smwgQSubpropertyDepth": 10
	},
	"meta": {
		"skip-on": {
			"virtuoso": "Virtuoso 6.1 rdfs / subproperty/property hierarchies are currently not implemented"
		},
		"version": "2",
		"is-incomplete": false,
		"debug": false
	}
}